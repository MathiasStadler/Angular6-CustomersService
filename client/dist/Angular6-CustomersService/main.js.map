{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.ts","webpack:///./src/app/app.component.ts.AppComponent.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/core/core.module.ts","webpack:///./src/app/core/data-filter.service.ts","webpack:///./src/app/core/data.service.ts","webpack:///./src/app/core/sorter.ts","webpack:///./src/app/core/trackby.service.ts","webpack:///./src/app/customers/customers-edit.component.html","webpack:///./src/app/customers/customers-edit.component.ts","webpack:///./src/app/customers/customers-grid.component.html","webpack:///./src/app/customers/customers-grid.component.ts","webpack:///./src/app/customers/customers.component.html","webpack:///./src/app/customers/customers.component.ts","webpack:///./src/app/shared/ensureModuleLoadedOnceGuard.ts","webpack:///./src/app/shared/filter-textbox/filter-textbox.component.ts.FilterTextboxComponent.html","webpack:///./src/app/shared/filter-textbox/filter-textbox.component.ts","webpack:///./src/app/shared/pagination/pagination.component.html","webpack:///./src/app/shared/pagination/pagination.component.ts","webpack:///./src/app/shared/pipes/capitalize.pipe.ts","webpack:///./src/app/shared/pipes/trim.pipe.ts","webpack:///./src/app/shared/property-resolver.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","// angular imports\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// import { CustomerModule } from './customers/customers.module';\n\nimport { CustomersComponent } from './customers/customers.component';\nimport { CustomersGridComponent } from './customers/customers-grid.component';\nimport { CustomerEditComponent } from './customers/customers-edit.component';\nimport { CustomerEditReactiveComponent } from './customers/customer-edit-reactive.component';\nimport { IRouting } from './shared/interfaces';\n\n\nconst appRoutes: Routes = [\n  { path: 'customers', component: CustomersComponent },\n  { path: 'customers/:id', component: CustomerEditComponent },\n  // { path: 'customers/:id', component: CustomerEditReactiveComponent },\n  { path: '**', pathMatch: 'full', redirectTo: '/customers' } // catch any unfound routes and redirect to home page\n];\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(appRoutes)],\n  exports: [RouterModule]\n})\n\n// export const appRouting: IRouting = {\n//  routes: RouterModule.forRoot(appRoutes),\n//  components: [CustomersComponent, CustomerEditComponent, CustomerEditReactiveComponent, CustomersGridComponent]\n// };\n\n// export const routing = RouterModule.forRoot(appRoutes);\n\n\nexport class AppRoutingModule { }\n","<router-outlet></router-outlet>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-container',\n  template: `<router-outlet></router-outlet>`\n})\nexport class AppComponent {\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing';\n\nimport { CoreModule } from './core/core.module';\nimport { SharedModule } from './shared/shared.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    CoreModule,\n    SharedModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule, Optional, SkipSelf } from '@angular/core';\n\n// Using the new HttpClientModule now. If you're still on < Angular 4.3 see the\n// core.module.ts.httpmodule file instead (simplify rename it to the name\n// of this file to use it instead)\nimport { HttpClientModule, HttpClientXsrfModule } from '@angular/common/http';\n\nimport { DataService } from './data.service';\nimport { DataFilterService } from './data-filter.service';\nimport { Sorter } from './sorter';\nimport { TrackByService } from './trackby.service';\nimport { EnsureModuleLoadedOnceGuard } from '../shared/ensureModuleLoadedOnceGuard';\n\n@NgModule({\n  imports: [\n    // Can use with Angular 4.3+ to\n    HttpClientModule,\n    // Can use to override default names for XSRF cookie and header\n    // HttpClientXsrfModule.withOptions({\n    //   cookieName: 'My-XSRF-TOKEN',\n    //   headerName: 'My-X-XSRF-TOKEN',\n    // })\n  ],\n  providers: [DataService, DataFilterService, Sorter, TrackByService]\n})\nexport class CoreModule extends EnsureModuleLoadedOnceGuard {    // Ensure that CoreModule is only loaded into AppModule\n\n  // Looks for the module in the parent injector to see if it's already been loaded (only want it loaded once)\n  constructor(@Optional() @SkipSelf() parentModule: CoreModule) {\n    super(parentModule);\n  }\n\n}\n\n// Example of a custom XSRF class\n// export class MyCookieXSRFStrategy implements XSRFStrategy {\n//    constructor(\n//        private _cookieName: string = 'XSRF-TOKEN', private _headerName: string = 'X-XSRF-TOKEN') { }\n\n//    private getCookie(name: string) {\n//        let ca: Array<string> = document.cookie.split(';');\n//        let caLen: number = ca.length;\n//        let cookieName = name + \"=\";\n//        let c: string;\n\n//        for (let i: number = 0; i < caLen; i += 1) {\n//            c = ca[i].replace(/^\\s\\+/g, \"\");\n//            if (c.indexOf(cookieName) == 0) {\n//                return c.substring(cookieName.length, c.length);\n//            }\n//        }\n//        return \"\";\n//    }\n\n//    configureRequest(req: Request) {\n//        let xsrfToken = this.getCookie(this._cookieName);\n//        alert(xsrfToken);\n//        if (xsrfToken) {\n//            req.headers.set(this._headerName, xsrfToken);\n//        }\n//    }\n// }\n\n","import { Injectable } from '@angular/core';\nimport { PropertyResolver } from '../shared/property-resolver';\n\n@Injectable()\nexport class DataFilterService {\n\n  filter(datasource: any[], filterProperties: string[], filterData: string) {\n    if (datasource && filterProperties && filterData) {\n      filterData = filterData.toUpperCase();\n      const filtered = datasource.filter(item => {\n        let match = false;\n        for (const prop of filterProperties) {\n          let propVal: any = '';\n\n          // Account for nested properties like 'state.name'\n          if (prop.indexOf('.') > -1) {\n            propVal = PropertyResolver.resolve(prop, item);\n            if (propVal) {\n              propVal = propVal.toString().toUpperCase();\n            }\n          } else {\n            if (item[prop]) {\n              propVal = item[prop].toString().toUpperCase();\n            }\n          }\n\n          if (propVal.indexOf(filterData) > -1) {\n            match = true;\n            break;\n          }\n        }\n        return match;\n      });\n      return filtered;\n    } else {\n      return datasource;\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n// Using the new HttpClientModule now. If you're still on < Angular 4.3 see the\n// data.service.ts file instead (simplify rename it to the name\n// of this file to use it instead)\nimport { HttpClient, HttpResponse, HttpErrorResponse } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { throwError } from 'rxjs';  // Updated for Angular 6/RxJS 6\n// see web page https://www.metaltoad.com/blog/angular-6-upgrading-api-calls-rxjs-6\n\n// see for import operators\n// https://github.com/ReactiveX/rxjs/blob/6.2.0/MIGRATION.md\n\nimport { map, catchError } from 'rxjs/operators';\nimport { ICustomer, IOrder, IState, IPagedResults, ICustomerResponse } from '../shared/interfaces';\n\n@Injectable()\nexport class DataService {\n\n  // tslint:disable-next-line:no-inferrable-types\n  baseUrl: string = '/api/customers';\n  // tslint:disable-next-line:no-inferrable-types\n  baseStatesUrl: string = '/api/states';\n\n  constructor(private http: HttpClient) {\n  }\n\n  getCustomers(): Observable<ICustomer[]> {\n    return this.http.get<ICustomer[]>(this.baseUrl)\n      .pipe(map((customers: ICustomer[]) => {\n        this.calculateCustomersOrderTotal(customers);\n        return customers;\n      })\n      ).pipe(catchError(this.handleError));\n  }\n\n  getCustomersPage(page: number, pageSize: number): Observable<IPagedResults<ICustomer[]>> {\n    return this.http.get<ICustomer[]>(`${this.baseUrl}/page/${page}/${pageSize}`, { observe: 'response' })\n      .pipe(map((res) => {\n        // Need to observe response in order to get to this header (see {observe: 'response'} above)\n        const totalRecords = +res.headers.get('x-inlinecount');\n        const customers = res.body as ICustomer[];\n        this.calculateCustomersOrderTotal(customers);\n        return {\n          results: customers,\n          totalRecords: totalRecords\n        };\n      })\n      ).pipe(catchError(this.handleError));\n  }\n\n  getCustomer(id: string): Observable<ICustomer> {\n    return this.http.get<ICustomer>(this.baseUrl + '/' + id)\n      .pipe(catchError(this.handleError));\n  }\n\n  insertCustomer(customer: ICustomer): Observable<ICustomer> {\n    return this.http.post<ICustomerResponse>(this.baseUrl, customer)\n      .pipe(map((data) => {\n        console.log('insertCustomer status: ' + data.status);\n        return data.customer;\n      })\n      ).pipe(catchError(this.handleError));\n  }\n\n  updateCustomer(customer: ICustomer): Observable<ICustomer> {\n    return this.http.put<ICustomerResponse>(this.baseUrl + '/' + customer._id, customer)\n      .pipe(map((data) => {\n        console.log('updateCustomer status: ' + data.status);\n        return data.customer;\n      })\n      ).pipe(catchError(this.handleError));\n  }\n\n  deleteCustomer(id: string): Observable<boolean> {\n    return this.http.delete<boolean>(this.baseUrl + '/' + id)\n      .pipe(catchError(this.handleError));\n  }\n\n  getStates(): Observable<IState[]> {\n    return this.http.get<IState[]>(this.baseStatesUrl)\n      .pipe(catchError(this.handleError));\n  }\n\n  calculateCustomersOrderTotal(customers: ICustomer[]) {\n    for (const customer of customers) {\n      if (customer && customer.orders) {\n        let total = 0;\n        for (const order of customer.orders) {\n          total += (order.price * order.quantity);\n        }\n        customer.orderTotal = total;\n      }\n    }\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    console.error('server error:', error);\n    if (error.error instanceof Error) {\n      const errMessage = error.error.message;\n      return Observable.throw(errMessage);\n      // Use the following instead if using lite-server\n      // return Observable.throw(err.text() || 'backend server error');\n    }\n    return Observable.throw(error || 'Node.js server error');\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { PropertyResolver } from '../shared/property-resolver';\n\n@Injectable()\nexport class Sorter {\n\n    property: string = null;\n    // tslint:disable-next-line:no-inferrable-types\n    direction: number = 1;\n\n    sort(collection: any[], prop: any) {\n        this.property = prop;\n        this.direction = (this.property === prop) ? this.direction * -1 : 1;\n\n        collection.sort((a: any, b: any) => {\n            let aVal: any;\n            let bVal: any;\n\n            // Handle resolving complex properties such as 'state.name' for prop value\n            if (prop && prop.indexOf('.') > -1) {\n                aVal = PropertyResolver.resolve(prop, a);\n                bVal = PropertyResolver.resolve(prop, b);\n            } else {\n                aVal = a[prop];\n                bVal = b[prop];\n            }\n\n            // Fix issues that spaces before/after string value can cause such as ' San Francisco'\n            if (this.isString(aVal)) { aVal = aVal.trim().toUpperCase(); }\n            if (this.isString(bVal)) { bVal = bVal.trim().toUpperCase(); }\n\n            if (aVal === bVal) {\n                return 0;\n            } else if (aVal > bVal) {\n                return this.direction * -1;\n            } else {\n                return this.direction * 1;\n            }\n        });\n    }\n\n    isString(val: any): boolean {\n        return (val && (typeof val === 'string' || val instanceof String));\n    }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ICustomer } from '../shared/interfaces';\n\n@Injectable()\nexport class TrackByService {\n\n    customer(index: number, customer: ICustomer) {\n        return customer._id;\n    }\n\n}\n","<div>\n  <header>\n    <h3>\n      <span class=\"glyphicon glyphicon-user\"></span>\n      {{ customer.firstName }} {{ customer.lastName }}\n    </h3>\n  </header>\n  <br />\n  <form (ngSubmit)=\"submit()\" #customerForm=\"ngForm\" class=\"editForm\" novalidate>\n    <div class=\"form-group\">\n      <label>First Name</label>\n      <input type=\"text\" class=\"form-control\" name=\"firstName\" [(ngModel)]=\"customer.firstName\" #firstName=\"ngModel\" required>\n      <div class=\"alert alert-danger\" [hidden]=\"firstName.untouched || firstName.valid\">First Name is required</div>\n    </div>\n    <div class=\"form-group\">\n      <label>Last Name</label>\n      <input type=\"text\" class=\"form-control\" name=\"lastName\" [(ngModel)]=\"customer.lastName\" #lastName=\"ngModel\" required>\n      <div class=\"alert alert-danger\" [hidden]=\"lastName.untouched || lastName.valid\">Last Name is required</div>\n    </div>\n    <div class=\"form-group\">\n      <label>Gender</label>\n      <br />\n      <div class=\"radio\">\n        <label>\n          <input type=\"radio\" name=\"gender\" [(ngModel)]=\"customer.gender\" #gender=\"ngModel\" value=\"Male\" required /> Male\n        </label>\n      </div>\n      <div class=\"radio\">\n        <label>\n          <input type=\"radio\" name=\"gender\" [(ngModel)]=\"customer.gender\" #gender=\"ngModel\" value=\"Female\" required /> Female\n        </label>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label>Email</label>\n      <input type=\"email\" class=\"form-control\" name=\"email\" [(ngModel)]=\"customer.email\" #email=\"ngModel\" required pattern=\"^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$\"\n      />\n      <div class=\"alert alert-danger\" [hidden]=\"email.untouched || email.valid\">Email is required and must be valid</div>\n    </div>\n    <div class=\"form-group\">\n      <label>Address</label>\n      <input type=\"text\" class=\"form-control\" name=\"address\" [(ngModel)]=\"customer.address\" #address=\"ngModel\" required>\n      <div class=\"alert alert-danger\" [hidden]=\"address.untouched || address.valid\">Address is required</div>\n    </div>\n    <div class=\"form-group\">\n      <label>City</label>\n      <input type=\"text\" class=\"form-control\" name=\"city\" [(ngModel)]=\"customer.city\" #city=\"ngModel\" required>\n      <div class=\"alert alert-danger\" [hidden]=\"city.untouched || city.valid\">City is required</div>\n    </div>\n    <div class=\"form-group\">\n      <label>State</label>\n      <select class=\"form-control\" [(ngModel)]=\"customer.stateId\" name=\"state\" required>\n        <option *ngFor=\"let state of states\" [ngValue]=\"state.id\">{{state.name}}</option>\n      </select>\n    </div>\n    <br />\n\n    <div *ngIf=\"customer\">\n      <div class=\"alert alert-warning\" *ngIf=\"customer._id && deleteMessageEnabled\">\n        Delete Customer?&nbsp;&nbsp;\n        <button class=\"btn btn-danger\" (click)=\"delete($event)\">Yes</button>&nbsp;&nbsp;\n        <button class=\"btn btn-default\" (click)=\"deleteMessageEnabled = false\">No</button>\n      </div>\n      <button class=\"btn btn-danger\" *ngIf=\"customer._id && !deleteMessageEnabled\" (click)=\"deleteMessageEnabled = true\">Delete</button>&nbsp;&nbsp;\n\n      <div class=\"pull-right\" *ngIf=\"!deleteMessageEnabled\">\n        <button class=\"btn btn-default\" (click)=\"cancel($event)\">Cancel</button>&nbsp;&nbsp;\n        <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"!customerForm.valid\">{{ operationText }}</button>\n      </div>\n    </div>\n    <br />\n    <br />\n    <div class=\"alert alert-danger\" *ngIf=\"errorMessage != null\">{{ errorMessage }}</div>\n\n  </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { DataService } from '../core/data.service';\nimport { ICustomer, IState } from '../shared/interfaces';\n\n@Component({\n  selector: 'app-customer-edit',\n  templateUrl: './customers-edit.component.html'\n})\nexport class CustomerEditComponent implements OnInit {\n\n  customer: ICustomer = {\n    firstName: '',\n    lastName: '',\n    gender: '',\n    address: '',\n    email: '',\n    city: '',\n    zip: 0\n  };\n  states: IState[];\n  errorMessage: string;\n  deleteMessageEnabled: boolean;\n  // tslint:disable-next-line:no-inferrable-types\n  operationText: string = 'Insert';\n\n  constructor(private router: Router,\n    private route: ActivatedRoute,\n    private dataService: DataService) { }\n\n  ngOnInit() {\n    const id = this.route.snapshot.params['id'];\n    if (id !== '0') {\n      this.operationText = 'Update';\n      this.getCustomer(id);\n    }\n\n    this.getStates();\n  }\n\n  getCustomer(id: string) {\n    this.dataService.getCustomer(id)\n      .subscribe((customer: ICustomer) => {\n        this.customer = customer;\n      },\n        (err: any) => console.log(err));\n  }\n\n  getStates() {\n    this.dataService.getStates().subscribe((states: IState[]) => this.states = states);\n  }\n\n  submit() {\n\n    if (this.customer._id) {\n\n      this.dataService.updateCustomer(this.customer)\n        .subscribe((customer: ICustomer) => {\n          if (customer) {\n            this.router.navigate(['/customers']);\n          } else {\n            this.errorMessage = 'Unable to save customer';\n          }\n        },\n          (err: any) => console.log(err));\n\n    } else {\n\n      this.dataService.insertCustomer(this.customer)\n        .subscribe((customer: ICustomer) => {\n          if (customer) {\n            this.router.navigate(['/customers']);\n          } else {\n            this.errorMessage = 'Unable to add customer';\n          }\n        },\n          (err: any) => console.log(err));\n\n    }\n  }\n\n  cancel(event: Event) {\n    event.preventDefault();\n    this.router.navigate(['/']);\n  }\n\n  delete(event: Event) {\n    event.preventDefault();\n    this.dataService.deleteCustomer(this.customer._id)\n      .subscribe((status: boolean) => {\n        if (status) {\n          this.router.navigate(['/customers']);\n        } else {\n          this.errorMessage = 'Unable to delete customer';\n        }\n      },\n        (err) => console.log(err));\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row grid-container\">\n    <div class=\"col-md-10\">\n      <div class=\"table\">\n        <table class=\"table table-striped table-hover\">\n          <thead>\n            <tr>\n              <th>&nbsp;</th>\n              <th (click)=\"sort('firstName')\">First Name</th>\n              <th (click)=\"sort('lastName')\">Last Name</th>\n              <th (click)=\"sort('address')\">Address</th>\n              <th (click)=\"sort('city')\">City</th>\n              <th (click)=\"sort('state.name')\">State</th>\n              <th (click)=\"sort('orderTotal')\">Order Total</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let customer of customers;trackBy:trackby.customer\">\n              <td>\n                <img src=\"images/{{ customer.gender | lowercase }}.png\" class=\"card-image\" alt=\"Customer Image\" />\n              </td>\n              <td>\n                <a [routerLink]=\"['/customers',customer._id]\">{{ customer.firstName | capitalize }}</a>\n              </td>\n              <td>{{ customer.lastName | capitalize }}</td>\n              <td>{{ customer.address }}</td>\n              <td>{{ customer.city | trim }}</td>\n              <td>{{ customer.state.name }}</td>\n              <td>{{ customer.orderTotal | currency:'USD':'symbol' }}</td>\n            </tr>\n            <tr *ngIf=\"!customers.length\">\n              <td>&nbsp;</td>\n              <td colspan=\"6\">No Records Found</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, Input, OnInit, ChangeDetectionStrategy } from '@angular/core';\n\nimport { ICustomer } from '../shared/interfaces';\nimport { Sorter } from '../core/sorter';\nimport { TrackByService } from '../core/trackby.service';\n\n@Component({\n  selector: 'app-customers-grid',\n  templateUrl: './customers-grid.component.html',\n  // When using OnPush detectors, then the framework will check an OnPush\n  // component when any of its input properties changes, when it fires\n  // an event, or when an observable fires an event ~ Victor Savkin (Angular Team)\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CustomersGridComponent implements OnInit {\n\n  @Input() customers: ICustomer[] = [];\n\n  constructor(private sorter: Sorter, public trackby: TrackByService) { }\n\n  ngOnInit() {\n\n  }\n\n  sort(prop: string) {\n    this.sorter.sort(this.customers, prop);\n  }\n\n}\n\n","<div class=\"customers view indent\">\n  <div class=\"container\">\n    <header>\n      <h3>\n        <span class=\"glyphicon glyphicon-user\"></span>\n        {{ title }}\n      </h3>\n    </header>\n    <br />\n    <div class=\"row\">\n      <div class=\"col-md-8\">\n        <div class=\"navbar\">\n          <app-filter-textbox (changed)=\"filterChanged($event)\"></app-filter-textbox>\n        </div>\n      </div>\n      <div class=\"col-md-4\">\n        <a class=\"btn btn-default\" [routerLink]=\"['/customers', '0']\">Add New Customer</a>\n      </div>\n    </div>\n\n    <app-customers-grid [customers]=\"filteredCustomers\"></app-customers-grid>\n\n    <app-pagination [totalItems]=\"totalRecords\" [pageSize]=\"pageSize\" (pageChanged)=\"pageChanged($event)\"></app-pagination>\n\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { DataFilterService } from '../core/data-filter.service';\nimport { DataService } from '../core/data.service';\nimport { ICustomer, IOrder, IPagedResults } from '../shared/interfaces';\n\n@Component({\n  selector: 'app-customers',\n  templateUrl: './customers.component.html'\n})\nexport class CustomersComponent implements OnInit {\n\n  title: string;\n  customers: ICustomer[] = [];\n  filteredCustomers: ICustomer[] = [];\n\n  // tslint:disable-next-line:no-inferrable-types\n  totalRecords: number = 0;\n  // tslint:disable-next-line:no-inferrable-types\n  pageSize: number = 10;\n\n  constructor(private router: Router,\n    private dataService: DataService,\n    private dataFilter: DataFilterService) { }\n\n  ngOnInit() {\n    this.title = 'Customers';\n    this.getCustomersPage(1);\n  }\n\n  filterChanged(filterText: string) {\n    if (filterText && this.customers) {\n      const props = ['firstName', 'lastName', 'address', 'city', 'state.name', 'orderTotal'];\n      this.filteredCustomers = this.dataFilter.filter(this.customers, props, filterText);\n    } else {\n      this.filteredCustomers = this.customers;\n    }\n  }\n\n  pageChanged(page: number) {\n    this.getCustomersPage(page);\n  }\n\n  getCustomersPage(page: number) {\n    this.dataService.getCustomersPage((page - 1) * this.pageSize, this.pageSize)\n      .subscribe((response: IPagedResults<ICustomer[]>) => {\n        this.customers = this.filteredCustomers = response.results;\n        this.totalRecords = response.totalRecords;\n      },\n        (err: any) => console.log(err),\n        () => console.log('getCustomersPage() retrieved customers'));\n  }\n\n}\n","export class EnsureModuleLoadedOnceGuard {\n\n    constructor(targetModule: any) {\n        if (targetModule) {\n            throw new Error(`${targetModule.constructor.name} has already been loaded. Import this module in the AppModule only.`);\n        }\n    }\n\n}\n","\n    <form>\n         Filter:\n         <input type=\"text\" name=\"filter\"\n                [(ngModel)]=\"model.filter\"\n                (keyup)=\"filterChanged($event)\"  />\n    </form>\n  ","import { Component, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-filter-textbox',\n  template: `\n    <form>\n         Filter:\n         <input type=\"text\" name=\"filter\"\n                [(ngModel)]=\"model.filter\"\n                (keyup)=\"filterChanged($event)\"  />\n    </form>\n  `\n})\nexport class FilterTextboxComponent {\n\n\n  model: { filter: string } = { filter: null };\n\n  @Output()\n  changed: EventEmitter<string> = new EventEmitter<string>();\n\n  filterChanged(event: any) {\n    event.preventDefault();\n    this.changed.emit(this.model.filter); // Raise changed event\n  }\n}\n\n","<nav [hidden]=\"!isVisible\">\n  <ul class=\"pagination\">\n    <li [class.disabled]=\"!previousEnabled\" (click)=\"previousNext(-1, $event)\">\n      <a aria-label=\"Previous\">\n        <span aria-hidden=\"true\">&laquo;</span>\n      </a>\n    </li>\n    <li *ngFor=\"let page of pages\" (click)=\"changePage(page, $event)\" [class.active]=\"currentPage === page\">\n      <a>{{ page }}</a>\n    </li>\n    <li [class.disabled]=\"!nextEnabled\" (click)=\"previousNext(1, $event)\">\n      <a aria-label=\"Next\">\n        <span aria-hidden=\"true\">&raquo;</span>\n      </a>\n    </li>\n  </ul>\n</nav>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-pagination',\n  templateUrl: './pagination.component.html',\n  styleUrls: ['./pagination.component.css']\n})\n\nexport class PaginationComponent implements OnInit {\n\n  private pagerTotalItems: number;\n  private pagerPageSize: number;\n\n  totalPages: number;\n  pages: number[] = [];\n  // tslint:disable-next-line:no-inferrable-types\n  currentPage: number = 1;\n  // tslint:disable-next-line:no-inferrable-types\n  isVisible: boolean = false;\n  // tslint:disable-next-line:no-inferrable-types\n  previousEnabled: boolean = false;\n  // tslint:disable-next-line:no-inferrable-types\n  nextEnabled: boolean = true;\n\n  @Input() get pageSize(): number {\n    return this.pagerPageSize;\n  }\n\n  set pageSize(size: number) {\n    this.pagerPageSize = size;\n    this.update();\n  }\n\n  @Input() get totalItems(): number {\n    return this.pagerTotalItems;\n  }\n\n  set totalItems(itemCount: number) {\n    this.pagerTotalItems = itemCount;\n    this.update();\n  }\n\n  @Output() pageChanged: EventEmitter<number> = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit() {\n\n  }\n\n  update() {\n    if (this.pagerTotalItems && this.pagerPageSize) {\n      this.totalPages = Math.ceil(this.pagerTotalItems / this.pageSize);\n      this.isVisible = true;\n      if (this.totalItems >= this.pageSize) {\n        for (let i = 1; i < this.totalPages + 1; i++) {\n          this.pages.push(i);\n        }\n      }\n      return;\n    }\n\n    this.isVisible = false;\n  }\n\n  previousNext(direction: number, event?: MouseEvent) {\n    let page: number = this.currentPage;\n    if (direction === -1) {\n      if (page > 1) { page--; }\n    } else {\n      if (page < this.totalPages) { page++; }\n    }\n    this.changePage(page, event);\n  }\n\n  changePage(page: number, event?: MouseEvent) {\n    if (event) {\n      event.preventDefault();\n    }\n    if (this.currentPage === page) { return; }\n    this.currentPage = page;\n    this.previousEnabled = this.currentPage > 1;\n    this.nextEnabled = this.currentPage < this.totalPages;\n    this.pageChanged.emit(page);\n  }\n\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'capitalize' })\nexport class CapitalizePipe implements PipeTransform {\n\n  transform(value: any) {\n    if (value) {\n      return value.charAt(0).toUpperCase() + value.slice(1);\n    }\n    return value;\n  }\n\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'trim' })\nexport class TrimPipe implements PipeTransform {\n  transform(value: any) {\n    if (!value) {\n      return '';\n    }\n    return value.trim();\n  }\n}\n","export class PropertyResolver {\n    static resolve(path: string, obj: any) {\n        return path.split('.').reduce((prev, curr) => {\n            return (prev ? prev[curr] : undefined);\n        }, obj || self);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { PaginationComponent } from './pagination/pagination.component';\nimport { CapitalizePipe } from './pipes/capitalize.pipe';\nimport { TrimPipe } from './pipes/trim.pipe';\nimport { FilterTextboxComponent } from './filter-textbox/filter-textbox.component';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, ReactiveFormsModule],\n  declarations: [CapitalizePipe, TrimPipe, FilterTextboxComponent, PaginationComponent],\n  exports: [CommonModule, FormsModule, ReactiveFormsModule, CapitalizePipe, TrimPipe, FilterTextboxComponent, PaginationComponent]\n})\nexport class SharedModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n"],"sourceRoot":""}